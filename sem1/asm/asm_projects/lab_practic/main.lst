     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fprintf, scanf, fopen, fclose, printf          ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 <res 00000004>              file_descriptor resd 1
    18 00000004 746578742E74787400          file_name db "text.txt", 0
    19 0000000D 256C6C7800                  read_format db "%llx", 0
    20 00000012 257300                      fprint_format db "%s", 0
    21 00000015 7700                        acces_mode db "w", 0
    22 00000017 <res 00000002>              letter resb 2
    23 00000019 257300                      print_format db "%s", 0
    24 0000001C <res 00000064>              secret resb 100
    25 00000080 <res 00000001>              letter_count resb 1
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30 00000000 68[15000000]                    push acces_mode
    31 00000005 68[04000000]                    push file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4 * 2
    34                                          
    35 00000013 A3[00000000]                    mov [file_descriptor], eax
    36                                          
    37 00000018 68[1C000000]                    push secret
    38 0000001D 68[0D000000]                    push read_format
    39 00000022 FF15[00000000]                  call [scanf]
    40 00000028 83C408                          add esp, 4 * 2
    41                                          
    42 0000002B BB00000000                      mov ebx, 0
    43 00000030 BE[1C000000]                    mov esi, secret
    44                                          
    45                                  
    46                                          
    47                                          
    48 00000035 BE[1C000000]                    mov esi, secret
    49                                  
    50                                          decoding_loop:
    51 0000003A 31C0                                xor eax, eax
    52 0000003C AC                                  lodsb
    53 0000003D 3C00                                cmp al, 0
    54 0000003F 7429                                je finnish_word
    55                                              
    56 00000041 A2[17000000]                        mov byte[letter], al
    57 00000046 C605[18000000]00                    mov byte[letter + 1], 0
    58                                  
    59                                              
    60 0000004D 68[17000000]                        push letter
    61 00000052 68[12000000]                        push fprint_format
    62 00000057 FF35[00000000]                      push dword[file_descriptor]
    63 0000005D FF15[00000000]                      call [fprintf]
    64 00000063 83C40C                              add esp, 4 * 3
    65                                              
    66                                              
    67 00000066 31C9                                xor ecx, ecx
    68 00000068 E2D0                            loop decoding_loop
    69                                          finnish_word
    69          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    70                                      
    71 0000006A FF35[00000000]                  push dword[file_descriptor]
    72 00000070 FF15[00000000]                  call [fclose]
    73 00000076 83C404                          add esp, 4
    74                                      
    75                                          ; exit(0)
    76 00000079 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    77 0000007B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
