     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, fopen, fclose, fread            ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import fopen msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import fclose msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 00000000                    con dd 0
    16 00000004 74657874322E747874-         file_name dd "text2.txt", 0
    16 0000000D 00000000000000     
    17 00000014 7200000000000000            acces_mode dd "r", 0
    18 0000001C <res 00000004>              file_descriptor resd 1
    19 00000020 6165696F7500000000-         vowels dd "aeiou", 0
    19 00000029 000000             
    20 0000002C 256400                      format db "%d", 0
    21 0000002F 00000000                    text dd 0
    22                                      
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[14000000]                    push acces_mode
    28 00000005 68[04000000]                    push file_name
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp, 4*2
    31                                          
    32 00000013 A3[1C000000]                    mov [file_descriptor], eax
    33                                          
    34 00000018 FF35[1C000000]                  push dword[file_descriptor]
    35 0000001E 6A64                            push dword 100
    36 00000020 6A01                            push dword 1
    37 00000022 68[2F000000]                    push text
    38 00000027 FF15[00000000]                  call [fread]
    39 0000002D 83C410                          add esp, 4*4
    40                                          
    41 00000030 BE[2F000000]                    mov esi, text
    42                                          
    43 00000035 89C1                            mov ecx, eax
    44                                          all_chars:
    45 00000037 51                                  push ecx
    46 00000038 BF[20000000]                        mov edi, vowels
    47 0000003D AC                                  lodsb
    48 0000003E B905000000                          mov ecx, 5
    49 00000043 F2AE                                repne scasb
    50 00000045 7406                                je continue
    51 00000047 FF05[00000000]                          inc dword[con]
    52                                              continue: 
    53 0000004D 59                                  pop ecx
    54 0000004E E2E7                            loop all_chars
    55                                          
    56                                          
    57 00000050 FF35[00000000]                  push dword[con]
    58 00000056 68[2C000000]                    push format
    59 0000005B FF15[00000000]                  call [printf]
    60 00000061 83C408                          add esp, 4 * 2
    61                                          
    62 00000064 FF35[1C000000]                  push dword[file_descriptor]
    63 0000006A FF15[00000000]                  call [fclose]
    64 00000070 83C404                          add esp, 4 * 1
    65                                      
    66                                          ; exit(0)
    67 00000073 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    68 00000075 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
