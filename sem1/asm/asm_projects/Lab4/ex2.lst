     1                                  bits 32 ;asamblare și compilare pentru arhitectura de 32 biți
     2                                  ; definim punctul de intrare in programul principal
     3                                  global start
     4                                  
     5                                  ; declaram functiile externe necesare programului nostru 
     6                                  extern exit ; indicam asamblorului ca exit exista, chiar daca noi nu o vom defini
     7                                  import exit msvcrt.dll  ; exit este o functie care incheie procesul, este definita in msvcrt.dll
     8                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
     9                                  
    10                                  ; segmentul de date in care se vor defini variabilele 
    11                                  segment data use32 class=data
    12                                  ; ... 
    13 00000000 2D00                        a dw 45
    14 00000002 7B00                        b dw 123
    15 00000004 00000000                    c dd 0
    16                                      
    17                                  ; segmentul de cod
    18                                  segment code use32 class=code
    19                                  start:
    20                                  ; ... 
    21                                  
    22                                      ;c(0-3) = b(5-8)
    23                                      ;c(4-8) = a(0-4)
    24                                      ;c(9-15) = a(6-12)
    25                                      ;c(16-31) = b(0-15)
    26                                      
    27 00000000 6683E300                    and bx, 0
    28 00000004 6683E000                    and ax, 0
    29 00000008 663305[02000000]            xor ax, [b]
    30 0000000F 6625E001                    and ax, 0000_0001_1110_0000b
    31 00000013 66C1E805                    shr ax, 5
    32 00000017 6631C3                      xor bx, ax
    33                                      
    34 0000001A 6683E000                    and ax, 0
    35 0000001E 663305[00000000]            xor ax, [a]
    36 00000025 6683E01F                    and ax, 0000_0000_0001_1111b
    37 00000029 66C1E004                    shl ax, 4
    38 0000002D 6631C3                      xor bx, ax
    39                                      
    40 00000030 6683E000                    and ax, 0
    41 00000034 663305[00000000]            xor ax, [a]
    42 0000003B 6625C01F                    and ax, 0001_1111_1100_0000b
    43 0000003F 66C1E003                    shl ax, 3
    44 00000043 6631C3                      xor bx, ax
    45                                      
    46 00000046 83E000                      and eax, 0
    47 00000049 663305[02000000]            xor ax, [b]
    48 00000050 C1E010                      shl eax, 16
    49                                      
    50 00000053 3105[04000000]              xor [c], eax
    51 00000059 66311D[04000000]            xor [c], bx
    52                                      
    53                                      ; exit(0)
    54 00000060 6A00                        push dword 0 ; se pune pe stiva parametrul functiei exit
    55 00000062 FF15[00000000]              call [exit] ; apelul functiei exit pentru terminarea executiei programului
