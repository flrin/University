     1                                  bits 32 ;asamblare și compilare pentru arhitectura de 32 biți
     2                                  ; definim punctul de intrare in programul principal
     3                                  global start
     4                                  
     5                                  ; declaram functiile externe necesare programului nostru 
     6                                  extern exit ; indicam asamblorului ca exit exista, chiar daca noi nu o vom defini
     7                                  import exit msvcrt.dll  ; exit este o functie care incheie procesul, este definita in msvcrt.dll
     8                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
     9                                          
    10                                  ; segmentul de date in care se vor defini variabilele 
    11                                  segment data use32 class=data
    12                                  ; ... 
    13 00000000 78563412CDAB561244-         s dd 12345678h, 1256ABCDh, 12AB4344h
    13 00000009 43AB12             
    14                                      len equ ($-s) / 4
    15 0000000C <res 00000006>              d resw len
    16 00000012 <res 00000004>              temp resb 4
    17                                      
    18                                      
    19                                  ; segmentul de cod
    20                                  segment code use32 class=code
    21                                  start:
    22                                  ; ... 
    23 00000000 B800000000                  mov eax, 0
    24 00000005 BE[00000000]                mov esi, s
    25 0000000A BF[0C000000]                mov edi, d
    26 0000000F B903000000                  mov ecx, len
    27                                      memo:
    28 00000014 66A5                            movsw
    29 00000016 83C602                          add esi, 2
    30 00000019 E2F9                        loop memo
    31                                  
    32 0000001B B903000000                  mov ecx, len
    33                                      bubble_1:
    34 00000020 51                              push ecx
    35                                          
    36 00000021 BE[0C000000]                    mov esi, d
    37 00000026 BF[0E000000]                    mov edi, d + 2         
    38                                          
    39 0000002B B902000000                      mov ecx, len - 1
    40                                          bubble_2:
    41 00000030 66A7                                cmpsw
    42 00000032 7715                                ja switch
    43                                              
    44 00000034 83EE02                              sub esi, 2
    45 00000037 83EF02                              sub edi, 2
    46 0000003A 668B07                              mov ax, [edi]
    47 0000003D 66A5                                movsw
    48 0000003F 668946FE                            mov [esi - 2], ax
    49 00000043 83EE02                              sub esi, 2
    50 00000046 83EF02                              sub edi, 2
    51                                              
    52                                              switch:
    53 00000049 E2E5                            loop bubble_2
    54 0000004B 59                              pop ecx
    55 0000004C E2D2                        loop bubble_1
    56                                      
    57 0000004E BE[0C000000]                mov esi, d
    58 00000053 BF[00000000]                mov edi, s
    59 00000058 B903000000                  mov ecx, len
    60                                      merge:
    61 0000005D 66A5                            movsw
    62 0000005F 83C702                          add edi, 2
    63 00000062 E2F9                        loop merge
    64                                      
    65                                      
    66                                  
    67                                      ; exit(0)
    68 00000064 6A00                        push dword 0 ; se pune pe stiva parametrul functiei exit
    69 00000066 FF15[00000000]              call [exit] ; apelul functiei exit pentru terminarea executiei programului
