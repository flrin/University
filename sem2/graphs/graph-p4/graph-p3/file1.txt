GRAPH
8 12
0 4 4
0 7 2
1 0 7
1 2 9
2 4 0
2 7 -1
3 7 8
4 3 0
5 3 8
5 6 6
6 0 -3
6 7 -1

---------------------------------------------
TOPOLOGICAL SORT
In degree count:
0: 2
1: 0
2: 1
3: 2
4: 2
5: 0
6: 1
7: 4
Added 1
Added 5

In degree count:
0: 1
1: -1
2: 0
3: 1
4: 2
5: -1
6: 0
7: 4
Added 2
Added 6

In degree count:
0: 0
1: -1
2: -1
3: 1
4: 1
5: -1
6: -1
7: 2
Added 0

In degree count:
0: -1
1: -1
2: -1
3: 1
4: 0
5: -1
6: -1
7: 1
Added 4

In degree count:
0: -1
1: -1
2: -1
3: 0
4: -1
5: -1
6: -1
7: 1
Added 3

In degree count:
0: -1
1: -1
2: -1
3: -1
4: -1
5: -1
6: -1
7: 0
Added 7

The sorted vertices: [1, 5, 2, 6, 0, 4, 3, 7]

------------------------------------------------------------
HIGHEST COST PATH
5 to 7

1
5: 5
2
6
0
4
3
7

Checking vertex 5 to 3...
Path [5, 3] (8) better than [] (-inf)
1
5: 5
2
6
0
4
3: 5, 3
7

Checking vertex 5 to 6...
Path [5, 6] (6) better than [] (-inf)
1
5: 5
2
6: 5, 6
0
4
3: 5, 3
7

Checking vertex 6 to 0...
Path [5, 6, 0] (3) better than [] (-inf)
1
5: 5
2
6: 5, 6
0: 5, 6, 0
4
3: 5, 3
7

Checking vertex 6 to 7...
Path [5, 6, 7] (5) better than [] (-inf)
1
5: 5
2
6: 5, 6
0: 5, 6, 0
4
3: 5, 3
7: 5, 6, 7

Checking vertex 0 to 4...
Path [5, 6, 0, 4] (7) better than [] (-inf)
1
5: 5
2
6: 5, 6
0: 5, 6, 0
4: 5, 6, 0, 4
3: 5, 3
7: 5, 6, 7

Checking vertex 0 to 7...
Old path [5, 6, 7] (5) better or equal with [5, 6, 0, 7] (5)

Checking vertex 4 to 3...
Old path [5, 3] (8) better or equal with [5, 6, 0, 4, 3] (7)

Checking vertex 3 to 7...
Path [5, 3, 7] (16) better than [5, 6, 7] (5)
1
5: 5
2
6: 5, 6
0: 5, 6, 0
4: 5, 6, 0, 4
3: 5, 3
7: 5, 3, 7

Path to 7: [5, 3, 7]
Path cost to 7: 16